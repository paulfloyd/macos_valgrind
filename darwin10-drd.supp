# DRD suppressions for Darwin 10.x / Mac OS X 10.6 Snow Leopard

#
# dyld
#
{
   dyld_mutex_not_locked
   drd:MutexErr
   fun:pthread_mutex_unlock
   fun:_dyld_register_func_for_*_image
}
{
   dyld_mutex_reinitialization
   drd:MutexErr
   fun:pthread_mutex_init
   fun:_Z24dyldGlobalLockInitializev
   fun:_dyld_initializer
}
{
   dyld_stub_binder
   drd:ConflictingAccess
   ...
   fun:_ZN4dyld18fastBindLazySymbolEPP11ImageLoaderm
   fun:dyld_stub_binder
}
{
   dyld ImageLoaderMachOCompressed::findExportedSymbol(char const*, ImageLoader const**) const
   drd:ConflictingAccess
   fun:_ZNK26ImageLoaderMachOCompressed18findExportedSymbolEPKcPPK11ImageLoader
}
{
   dyld dyld::fastBindLazySymbol(ImageLoader**, unsigned long)
   drd:ConflictingAccess
   ...
   fun:_ZN4dyld18fastBindLazySymbolEPP11ImageLoaderm
}
{
   dyld ImageLoaderMachOCompressed::doBindFastLazySymbol(unsigned int, ImageLoader::LinkContext const&)
   drd:ConflictingAccess
   ...
   fun:_ZN26ImageLoaderMachOCompressed20doBindFastLazySymbolEjRKN11ImageLoader11LinkContextE
}

#
# C library
#
{
   __umodti3
   drd:ConflictingAccess
   fun:__umodti3
}
{
   fork()
   drd:ConflictingAccess
   ...
   fun:_cthread_fork_child
   fun:fork
}
{
   flockfile
   drd:ConflictingAccess
   fun:flockfile
}
{
   funlockfile
   drd:ConflictingAccess
   fun:funlockfile
}
{
   vfprintf_l
   drd:ConflictingAccess
   fun:vfprintf_l
}
{
   localeconv_l
   drd:ConflictingAccess
   fun:localeconv_l
}
{
   __vfprintf
   drd:ConflictingAccess
   fun:__vfprintf
}
{
   fflush
   drd:ConflictingAccess
   fun:fflush
}
{
   cerror
   drd:ConflictingAccess
   ...
   fun:cerror
}
{
   do_rand
   drd:ConflictingAccess
   fun:do_rand
}
{
   mig_dealloc_reply_port
   drd:ConflictingAccess
   fun:mig_dealloc_reply_port
}

#
# pthread library
#
{
   thread_start
   drd:ConflictingAccess
   obj:*
   fun:thread_start
}
{
   pthread_create()
   drd:ConflictingAccess
   ...
   fun:pthread_create
}
{
   drd-darwin-pthread-join-1
   drd:ConflictingAccess
   ...
   fun:pthread_join$UNIX2003
}
{
   drd-darwin-pthread-join-2
   drd:ConflictingAccess
   ...
   fun:pthread_join
   fun:pthread_join
}
{
   _pthread_exit()
   drd:ConflictingAccess
   ...
   fun:_pthread_exit
}
{
   pthread_detach()
   drd:ConflictingAccess
   ...
   fun:pthread_detach
   fun:pthread_detach
}
{
   pthread_kill()
   drd:ConflictingAccess
   ...
   fun:pthread_kill
}
{
   spin_unlock()
   drd:ConflictingAccess
   fun:spin_unlock
}
{
   _pthread_testcancel()
   drd:ConflictingAccess
   fun:_pthread_testcancel
}

# @todo PJF Darwin suppressions are a total mess
# this is the last one and it's about 12 versions out of date
# the following are for OS X 10.7 / Darwin 11.4.2
{
   DRD PTHREAD MUTEX UNLOCK
   drd:ConflictingAccess
   ...
   fun:pthread_mutex_unlock
}
{
   DRD CXA FINALIZE
   drd:ConflictingAccess
   ...
   fun:__cxa_finalize
}
{
   DRD PTHREAD MUTEX LOCK
   drd:ConflictingAccess
   fun:pthread_mutex_lock
}
{
   DRD PTHREAD JOIN
   drd:ConflictingAccess
   ...
   fun:pthread_join
}
{
   DRD PTHREAD KEY CREATE
   drd:ConflictingAccess
   fun:pthread_key_create
}
{
   DRD SPIN LOCK
   drd:ConflictingAccess
   fun:spin_lock$VARIANT$mp
}
{
   DRD RESTORE SEM
   drd:ConflictingAccess
   fun:restore_sem_to_pool
}
{
   DRD OS CAS
   drd:ConflictingAccess
   fun:OSAtomicCompareAndSwap64$VARIANT$mp
}
{
   DRD PTHREAD SETSPECIFIC
   drd:ConflictingAccess
   fun:pthread_setspecific
}
{
   DRD PTHREAD START
   drd:ConflictingAccess
   ...
   fun:_pthread_start
}
# some suppressions gnerated on Darwin 17.7.0
{
   DRD PTHREAD JOIN
   drd:ConflictingAccess
   ...
   fun:_pthread_join*
}
{
   DRD PTHREAD CANCEL
   drd:ConflictingAccess
   fun:pthread_cancel
}
{
   DRD PTHREAD COND DESTROY
   drd:ConflictingAccess
   fun:pthread_cond_destroy
}
{
   DRD PTHREAD MUTEX DESTROY
   drd:ConflictingAccess
   fun:pthread_mutex_destroy
}
{
   DRD OS UNFAIR LOCK
   drd:ConflictingAccess
   fun:os_unfair_lock_lock_with_options
}
{
   DRD PTHREAD COND BROADCAST
   drd:ConflictingAccess
   ...
   fun:pthread_cond_broadcast
}
# @todo PJF does this also potentially impact atexit?
{
   DRD EXIT
   drd:ConflictingAccess
   ...
   fun:exit
}
{
   DRD STD ASSOC SUB STATE DTOR
   drd:ConflictingAccess
   fun:_ZNSt3__117__assoc_sub_state*
}
{
   DRD PTHREAD DETACH
   drd:ConflictingAccess
   fun:pthread_detach
}
{
IGNAL
   drd:ConflictingAccess
   ...
   fun:pthread_cond_signal
}
{
   DRD PTHREAD COND WAIT
   drd:ConflictingAccess
   fun:pthread_cond_wait
}
{
   DRD STD SHARED MUTEX UNLOCK
   drd:ConflictingAccess
   fun:_ZNSt3__119__shared_mutex_base13unlock_sharedEv
}
{
   DRD PLATFORM MEMMOVE
   drd:ConflictingAccess
   fun:_platform_memmove$VARIANT$*
}
{
   DRD SFVWRITE
   drd:ConflictingAccess
   fun:__sfvwrite
}
{
   DRD PTHREAD MUTEX *LOCK SLOW
   drd:ConflictingAccess
   fun:_pthread_mutex_*lock_slow
}
{
   DRD XVPRINTF
   drd:ConflictingAccess
   fun:__xvprintf
}
{
   DRD V2PRINTF
   drd:ConflictingAccess
   fun:__v2printf
}
